user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=default_cache:10m max_size=2g;

    upstream backend {
        server host.docker.internal:8001 weight=2;
        #server host.docker.internal:8004;
        #server host.docker.internal:8007;
    }
    
    upstream main_backend {
        server host.docker.internal:8001;
    }

    upstream mirror_backend {
        server host.docker.internal:8010;
    }

    map $request_method $upstream_location {
        GET     backend;
        default main_backend;
    }

    map $request_uri $api_uri {
        ~^/api/v1(.*)$ $1;
    }

    #map $request_uri $mirror_uri {
    #    ~^/mirror1/api/v1(.*)$ $1;
    #}

    server {
        listen 80;

        root /web/static;

		server_name localhost;
		
		proxy_pass_header Server;
		add_header Server "My_Jira" always;

        gzip on;
        gzip_min_length 10240;
        gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
        gzip_disable "MSIE [1-6]\.";

        proxy_cache_key $scheme$request_method$host$request_uri;

        proxy_cache default_cache;
        proxy_cache_methods GET;
		
        location / {
        }

        location /api/v1 {
            proxy_pass_header Server;
            proxy_pass https://$upstream_location$api_uri;
        }

        #location /mirror1 {
        #    proxy_pass_header Server;
        #    proxy_pass https://mirror_backend$mirror_uri;
        #}
		location /mirror1
		{
            rewrite ^/mirror1/api/v1(.*)$ /mirrorapi$1 last;
            rewrite ^/mirror1/(.*)$ /$1 last;
            rewrite ^/mirror1$ / last;
		}
		location /mirrorapi
		{
			internal;
			proxy_pass https://mirror_backend/api/v1;
		}

        location = /api/v1 {
            proxy_pass_header Server;
			return 301 https://localhost:8001/api/v1/index.html;
        }

        location /test {
            return 301 /;
        }

        location /admin {
            return 301 http://host.docker.internal:5050;
        }

        location /status {
            proxy_no_cache 1;
            stub_status;
        }
    }
}
